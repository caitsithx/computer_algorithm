package algorithm.baidu.B002;

/**
 * 网页爬虫在抓取网页时，从指定的URL站点入口开始爬取这个站点上的所有URL link，抓取到下一级link对应的页面后，
 * 同样对页面上的link进行抓取从而完成深度遍历。为简化问题，我们假设每个页面上至多只有一个link，如从www.baidu.com/a.html链接到
 * www.baidu.com/b.html再链到www.baidu.com/x.html，当爬虫抓取到某个页面时，有可能再链回www.baidu.com/b.html，
 * 也有可能爬取到一个不带任何link的终极页面。当抓取到相同的URL或不包含任何link的终极页面时即完成爬取。
 * 爬虫在抓取到这些页面后建立一个单向链表，用来记录抓取到的页面，如：a.html->b.html->x.html...->NULL。
 * 问：对于爬虫分别从www.baidu.com/x1.html和www.baidu.com/x2.html两个入口开始获得两个单向链表，
 * 得到这两个单向链表后，如何判断他们是否抓取到了相同的URL？（假设页面URL上百亿，存储资源有限，无法用hash方法判断是否包含相同的URL）
 * 请先描述相应的算法，再给出相应的代码实现。（只需给出判断方法代码，无需爬虫代码）
 * 两个单向链表的相交问题。
 * <p/>
 * 1）链表相交
 * 1.1) 求链表的最后一个节点，是否相同
 * 1.2) 链表首尾相连，测试是否有环
 * <p/>
 * 2）链表可能有环
 * 2.1）先判断2链表均有环。第一个链表的相遇节点是a。a一定在第二个链表中
 * 2.2）再一次对第二个链表运行环测试，如果遇到a则相交。如果测试结束，则不相交；
 * <p/>
 * Created by lixl on 6/1/14.
 */
public class WebBugCraw {
}
